name: SPFx CICD with O365 CLI

on: [push]


# Set the name of the sppkg file
env:
  SPPKG_FILE_NAME: 'spfx-cicd.sppkg'
  SEND_MAIL: 'true'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    
    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v1
      
    # Setup node.js runtime
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    # npm install
    - name: Run npm install
      run: npm install
    
    # gulp bundle and package solution
    - name: Bundle and package
      run: |
        gulp bundle --ship
        gulp package-solution --ship    
    
    # Upload artifacts (sppkg file)
    - name: Upload artifact (sppkg file)
      uses: actions/upload-artifact@v1.0.0
      with:
        name: output
        path: sharepoint/solution/${{ env.SPPKG_FILE_NAME }}

  # deploy-ubuntu:
  #   needs: build
  #   runs-on: ubuntu-latest
    
  #   steps:
    
  #   # Checkout code
  #   - name: Checkout code
  #     uses: actions/checkout@v1
      
  #   # Download package (sppkg file)
  #   - name: Download pacakge (sppkg file)
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: output
    
  #   # Login to tenant using action-cli-login
  #   - name: Office 365 CLI Login
  #     uses: pnp/action-cli-login@v1.0.0
  #     with:
  #       ADMIN_USERNAME:  ${{ secrets.adminUsername }}
  #       ADMIN_PASSWORD:  ${{ secrets.adminPassword }}
        
  #   # Deploy package to tenant using action-cli-deploy
  #   - name: Office 365 CLI Deploy
  #     id: deploy
  #     uses: pnp/action-cli-deploy@v1.0.0
  #     with:
  #       APP_FILE_PATH: output/${{ env.SPPKG_FILE_NAME }}
  #       OVERWRITE: true
    
  #   # Send an email using action-cli-runscript
  #   - name: Office 365 CLI Send email bash
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #        O365_CLI_SCRIPT: | 
  #         echo 'AppId - ${{ steps.deploy.outputs.APP_ID }}'
  #         echo 'Sending email...'
  #         o365 spo mail send --webUrl https://anoopccdev1.sharepoint.com/sites/teamsite --to 'anoop@anoopccdev1.onmicrosoft.com' --subject 'Deployment done' --body '<h2>Office 365 CLI</h2> <p>The deployment is complete.</p> <br/> Email sent via Office 365 CLI GitHub Action.'
  #         echo 'Email sent'
  #     if: env.SEND_MAIL == 'true'

  #     # Send an email using action-cli-runscript
  #   - name: Office 365 CLI Send email PS
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #        IS_POWERSHELL: true
  #        O365_CLI_SCRIPT: | 
  #         Write-Host 'AppId - ${{ steps.deploy.outputs.APP_ID }}'
  #         Write-Host 'Sending email...'
  #         o365 spo mail send --webUrl https://anoopccdev1.sharepoint.com/sites/teamsite --to 'anoop@anoopccdev1.onmicrosoft.com' --subject 'Deployment done' --body '<h2>Office 365 CLI</h2> <p>The deployment is complete.</p> <br/> Email sent via Office 365 CLI GitHub Action.'
  #         Write-Host 'Email sent'
  #     if: env.SEND_MAIL == 'true'

  #   # Run script bash
  #   - name: Office 365 CLI Runscript bash
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #       O365_CLI_SCRIPT_PATH: './scripts/appcatalog.sh'
        
  #   # Run script PS
  #   - name: Office 365 CLI Runscript PS
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #       O365_CLI_SCRIPT_PATH: './scripts/appcatalog.ps1' 
  
  # deploy-macos:
  #   needs: [build, deploy-ubuntu]
  #   runs-on: macos-latest
    
  #   steps:
    
  #   # Checkout code
  #   - name: Checkout code
  #     uses: actions/checkout@v1
      
  #   # Download package (sppkg file)
  #   - name: Download pacakge (sppkg file)
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: output
    
  #   # Login to tenant using action-cli-login
  #   - name: Office 365 CLI Login
  #     uses: pnp/action-cli-login@v1.0.0
  #     with:
  #       ADMIN_USERNAME:  ${{ secrets.adminUsername }}
  #       ADMIN_PASSWORD:  ${{ secrets.adminPassword }}
        
  #   # Deploy package to tenant using action-cli-deploy
  #   - name: Office 365 CLI Deploy
  #     id: deploy
  #     uses: pnp/action-cli-deploy@v1.0.0
  #     with:
  #       APP_FILE_PATH: output/${{ env.SPPKG_FILE_NAME }}
  #       OVERWRITE: true
    
  #   # Send an email using action-cli-runscript
  #   - name: Office 365 CLI Send email bash
  #     uses: anoopt/action-cli-runscript@master
  #     with:
  #        O365_CLI_SCRIPT: | 
  #         echo 'AppId - ${{ steps.deploy.outputs.APP_ID }}'
  #         echo 'Sending email...'
  #         o365 spo mail send --webUrl https://anoopccdev1.sharepoint.com/sites/teamsite --to 'anoop@anoopccdev1.onmicrosoft.com' --subject 'Deployment done' --body '<h2>Office 365 CLI</h2> <p>The deployment is complete.</p> <br/> Email sent via Office 365 CLI GitHub Action.'
  #         echo 'Email sent'
  #     if: env.SEND_MAIL == 'true'

  #     # Send an email using action-cli-runscript
  #   - name: Office 365 CLI Send email PS
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #        IS_POWERSHELL: true
  #        O365_CLI_SCRIPT: | 
  #         Write-Host 'AppId - ${{ steps.deploy.outputs.APP_ID }}'
  #         Write-Host 'Sending email...'
  #         o365 spo mail send --webUrl https://anoopccdev1.sharepoint.com/sites/teamsite --to 'anoop@anoopccdev1.onmicrosoft.com' --subject 'Deployment done' --body '<h2>Office 365 CLI</h2> <p>The deployment is complete.</p> <br/> Email sent via Office 365 CLI GitHub Action.'
  #         Write-Host 'Email sent'
  #     if: env.SEND_MAIL == 'true'

  #   # Run script bash
  #   - name: Office 365 CLI Runscript bash
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #       O365_CLI_SCRIPT_PATH: './scripts/appcatalog.sh'
        
  #   # Run script PS
  #   - name: Office 365 CLI Runscript PS
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #       O365_CLI_SCRIPT_PATH: './scripts/appcatalog.ps1' 

  # deploy-windows:
  #   needs: build
  #   runs-on: windows-latest
    
  #   steps:
    
  #   # Checkout code
  #   - name: Checkout code
  #     uses: actions/checkout@v1
      
  #   # Download package (sppkg file)
  #   - name: Download pacakge (sppkg file)
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: output
    
  #   # Login to tenant using action-cli-login
  #   - name: Office 365 CLI Login
  #     uses: pnp/action-cli-login@v1.0.0
  #     with:
  #       ADMIN_USERNAME:  ${{ secrets.adminUsername }}
  #       ADMIN_PASSWORD:  ${{ secrets.adminPassword }}
        
  #   # Deploy package to tenant using action-cli-deploy
  #   - name: Office 365 CLI Deploy
  #     id: deploy
  #     uses: pnp/action-cli-deploy@v1.0.0
  #     with:
  #       APP_FILE_PATH: output/${{ env.SPPKG_FILE_NAME }}
  #       OVERWRITE: true
    
  #   # Send an email using action-cli-runscript
  #   - name: Office 365 CLI Send email bash
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #        O365_CLI_SCRIPT: | 
  #         echo 'AppId - ${{ steps.deploy.outputs.APP_ID }}'
  #         echo 'Sending email...'
  #         o365 spo mail send --webUrl https://anoopccdev1.sharepoint.com/sites/teamsite --to 'anoop@anoopccdev1.onmicrosoft.com' --subject 'Deployment done' --body '<h2>Office 365 CLI</h2> <p>The deployment is complete.</p> <br/> Email sent via Office 365 CLI GitHub Action.'
  #         echo 'Email sent'
  #     if: env.SEND_MAIL == 'true'

  #     # Send an email using action-cli-runscript
  #   - name: Office 365 CLI Send email PS
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #        IS_POWERSHELL: true
  #        O365_CLI_SCRIPT: | 
  #         Write-Host 'AppId - ${{ steps.deploy.outputs.APP_ID }}'
  #         Write-Host 'Sending email...'
  #         o365 spo mail send --webUrl https://anoopccdev1.sharepoint.com/sites/teamsite --to 'anoop@anoopccdev1.onmicrosoft.com' --subject 'Deployment done' --body '<h2>Office 365 CLI</h2> <p>The deployment is complete.</p> <br/> Email sent via Office 365 CLI GitHub Action.'
  #         Write-Host 'Email sent'
  #     if: env.SEND_MAIL == 'true'

  #   # Run script bash
  #   - name: Office 365 CLI Runscript bash
  #     uses: pnp/action-cli-runscript@v1.0.0
  #     with:
  #       O365_CLI_SCRIPT_PATH: './scripts/appcatalog.sh'
        
  #   # Run script PS
  #   - name: Office 365 CLI Runscript PS
  #     uses: pnp/action-cli-runscript@v1
  #     with:
  #       O365_CLI_SCRIPT_PATH: './scripts/appcatalog.ps1' 
